"""create movies

Revision ID: 40619a187137
Revises: b6c58a56402d
Create Date: 2025-09-03 18:00:10.946741

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

from database.core.types.movie_genre import GenreListType

# revision identifiers, used by Alembic.
revision: str = '40619a187137'
down_revision: Union[str, Sequence[str], None] = 'b6c58a56402d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('movies',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('kinopoisk_id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('type',
                              sa.Enum('ANIMATED_SERIES', 'ANIME', 'CARTOON', 'MOVIE', 'TV_SERIES', name='movietype',
                                      native_enum=False), nullable=True),
                    sa.Column('year', sa.Integer(), nullable=True),
                    sa.Column('age_rating', sa.Integer(), nullable=True),
                    sa.Column('poster_url', sa.String(), nullable=True),
                    sa.Column('rating_kp', sa.Float(), nullable=True),
                    sa.Column('rating_imdb', sa.Float(), nullable=True),
                    sa.Column('budget_value', sa.Float(), nullable=True),
                    sa.Column('budget_currency', sa.String(length=8), nullable=True),
                    sa.Column('genres', GenreListType(), nullable=False),
                    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_movies_kinopoisk_id'), 'movies', ['kinopoisk_id'], unique=True)
    op.create_table('users_movies_search_log',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('movie_id', sa.Integer(), nullable=False),
                    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
                    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_users_movies_search_log_movie_id'), 'users_movies_search_log', ['movie_id'], unique=False)
    op.create_index(op.f('ix_users_movies_search_log_timestamp'), 'users_movies_search_log', ['timestamp'],
                    unique=False)
    op.create_index(op.f('ix_users_movies_search_log_user_id'), 'users_movies_search_log', ['user_id'], unique=False)
    op.create_index('ix_users_movies_search_log_user_time', 'users_movies_search_log',
                    ['user_id', sa.literal_column('timestamp DESC')], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_users_movies_search_log_user_time', table_name='users_movies_search_log')
    op.drop_index(op.f('ix_users_movies_search_log_user_id'), table_name='users_movies_search_log')
    op.drop_index(op.f('ix_users_movies_search_log_timestamp'), table_name='users_movies_search_log')
    op.drop_index(op.f('ix_users_movies_search_log_movie_id'), table_name='users_movies_search_log')
    op.drop_table('users_movies_search_log')
    op.drop_index(op.f('ix_movies_kinopoisk_id'), table_name='movies')
    op.drop_table('movies')
    # ### end Alembic commands ###
